generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  phone       Int
  password   String
  Address    Address?

  orders        Order[]
  wishlists     Wishlist[]
  carts         Cart[]
  productReview ProductReview[]
 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Address {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  city      String
  state     String
  pincode   Int
  userId    Int       @unique
  user      User     @relation(fields: [userId], references: [id])
 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}


model Order{
 id         String  @id @default(cuid())
 status     OrderStatusEnum
 orderItems OrderItem[]
 user       User     @relation(fields: [userId], references: [id])
 userId     Int
  isPaid      Boolean @default(false)
  isCompleted Boolean @default(false)

}



model OrderItem {
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  count     Int
  price     Float
  discount  Float

  @@unique([orderId, productId], name: "UniqueOrderItem")
}

model Product {
  id       String   @id @default(cuid())
  title    String
  price    Float
  discount Float?
  image    String
  detail   String
  category CategoryEnum
  cartItems      CartItem[]
  reviews      ProductReview[]
  orderItems   OrderItem[]
  wishlists    Wishlist[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductReview {
   id        Int      @id @default(autoincrement())
   stars     Int
   comment   String
   user      User     @relation(fields: [userId], references: [id])
   userId    Int
   product   Product  @relation(fields: [productId], references: [id])
   productId String
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}


model Wishlist {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  products  Product[]
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

}

model Cart {
  userId   Int        @id
  user     User       @relation(fields: [userId], references: [id])


  items  CartItem[]

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model CartItem {
  cart      Cart    @relation(fields: [cartId], references: [userId])
  cartId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId String
  count     Int

  @@unique([cartId, productId], name: "UniqueCartItem")
}

enum OrderStatusEnum {
  Processing
  Shipped
  Delivered
  Cancelled

}

enum CategoryEnum {
  Clothes
  Murti
  Tilak
  Accessories
}